1. What will be the output of the following code:

def fun1(str1):
    mystr = ""
    ctr = 1
    last_char = str1[0]
    for i in range(1, len(str1)):
        if last_char == str1[i]:
            ctr += 1
        else:
            mystr += str(ctr) + last_char
            ctr = 0
            last_char = str1[i]
            ctr += 1
    mystr += str(ctr) + last_char
    return mystr
print(fun1("PHP"))

A. 1P1H1P
B. 1P2H3P
C. 3P2H1P
D. 2P2H2P

Ans. A

2. What will be the output of the following code:

def fun2(str1):
    ints = "1234567890"
    num = ""
    letters = ""
    result_string = ""
    i = 0
    while i < len(str1):   
        if str1[i] in ints:
            num += str1[i]
        else:
            letters += str1[i]
        i += 1
    for i, char in enumerate(num):
        result_string += int(char) * letters[i]
    return result_string   
print(fun2("4A3B2C1D2A"))

A. AAAAAABBBCCD
B. AAAABBBCCDAA
C. AADCCBBBAAAA
D. DCCBBBAAAAAA

Ans. B

3. What will be the output of the following code:

def fun3(a):
  if len(a) == 0:
    return -1
  left_sum = 0
  for i in range(len(a) - 1):
    right_sum = 0
    middle_point = i + 1
    left_sum += a[i]
    for j in range(middle_point + 1, len(a)):
      right_sum += a[j]
    if left_sum == right_sum:
      return middle_point
  return -1
print(fun3([1,4,2,0,3,8,-4])) 

A. 1
B. 2
C. 3
D. 4

Ans. C

4. What will be the output of the following code:

def fun4(nums):
    new_nums = []
    for i in nums:
        nums_product = 1
        for j in nums:     
            if j != i:
                nums_product = nums_product * j
        new_nums.append(nums_product)
    return new_nums
print(fun4([1, 2, 0, 4]))

A. [8, 0, 0, 0]
B. [0, 8, 0, 0]
C. [0, 0, 8, 0]
D. [0, 0, 0, 8]

Ans. C

5. In what way the Symmetry Sparse Matrix can be stored efficiently?

A. Adjacency List
B. Binary tree
C. Hash table
D. Heap

Ans. B

6. What is the time complexity for decreasing priority of key in a maximum ternary heap of n elements?

A. O (log n/ log 3)
B. O (3log n/ log 3)
C. O (n)
D. O (1)

Ans. A

7. The number of trees in a binomial heap with n nodes is
A. logn
B. n
C. nlogn
D. n/2

Ans. A


