1. What will be the output of the following code:

def fun(llist, start):
    fun_list = []
    fun_list.append(start)
    while len(llist) >= 1:
        current = None
        directions = {}
        for item in llist:           
            if item[0] == start:
                directions[item[0]] = item[1]
        if len(directions) >= 1:
            current = min(directions.values())
            remove_tuple = (start, current)
        try:
            llist.remove(remove_tuple)
            fun_list.append(current)
            start = current
        except:
            return "not valid"
    return fun_list
print(fun([('A', 'B'), ('A', 'C'), ('B', 'C'), ('C', 'A')], 'A'))

A. ['A', 'B', 'A', 'C', 'C']
B. ['A', 'A', 'C', 'B', 'C']
C. ['A', 'C', 'A', 'B', 'C']
D. ['C', 'C', 'A', 'B', 'C']

Ans. C

2. What does f(1782818) return, for the following function definition:
def f(x):
  d=0
  while x > 1:
    (d,x) = (d+1,x/10)
  return(d)

A. 4
B. 5 
C. 6
D. 7

Ans. D

3. What can we say about a number n if g(n) returns True for the function g given below?

def g(n):
  for i in range(2,n):
    if n%i == 0:
       return(False)
  return(True)

A. n is a prime number.
B. n is a composite number.
C. n is multiple of 2.
D. None of the above.

Ans. A

4. Given the following permutation of a,b,c,d,e,f,g,h,i,j, what is the next permutation in lexicographic (dictionary) order? 
	fjadbihgec

A. fjacdbeghi
B. fjadcbeghi
C. fjacdbeghi
D. fjabcdeghi

Ans. B

5. Suppose we add this function foo() to the class Tree that implements search trees. For a name mytree with a value of type Tree, what would mytree.foo() compute?
    def foo(self):
        if self.isempty():
            return(0)
        elif self.isleaf():
            return(1)
        else:
            return(1 + max(self.left.foo(),self.right.foo()))
A. The number of nodes in mytree.
B. The largest value in mytree.
C. The length of the longest path from root to leaf in mytree.
D. The number of paths in mytree

Ans. C

6. Which of the following is false?

A. 2-3 tree requires less storage than the BST
B. lookup in 2-3 tree is more efficient than in BST
C. 2-3 tree is shallower than BST
D. 2-3 tree is a balanced tree

Ans. A

7. Which of the following is the most widely used external memory data structure?

A. AVL tree
B. B-tree
C. Red-black tree
D. Both AVL tree and Red-black tree

Ans. B
