1. Consider a customer Service hotline. Sometimes when a call comes in and there are not enough
operators to handle the call, it is placed on hold. When the next call comes in, it is also placed on
hold and this continues till the operator becomes available.
When the operator becomes available, the first call that was put on hold gets assigned to him/her.
Which of the below data structure is optimal to represent the calls on hold?
A. Tree
B. Graph
C. Queue
D. Stack
Ans. C


2. Consider a treasure hunt game in which you are handed a clue that leads you to another clue and
so on until you find the treasure. The first clue links (or points) to the location of next clue. The
second clue links to the location of third, and so on.
Which data structure can be optimally used to model the treasure hunt game?
A. Stack
B. Linked List
C. Graph
D. Queue
Ans. B


3. Consider the Python code given below to compute the nth fibonacci number.
 
def fibonacci(num):
	global fibo,count
	if(num<=(len(fibo)-1)):
		return fobo[num]
	else:
		fibo.append(fibonacci(num-1)+fibonacci(num-2))
		return fibo[num]

fibo=[]
fibo.append(0)
fibo.append(1)
count=1
n=6
print(n,"th Fibonacci number: ",fibonacci(n))


Suppose we are using the above code to compute the 7th fibonacci number, how many times
fibonacci(3) will be computed?
A. 3
B. 4
C. 0
D. 1
Ans. B


4. Given the following linked list:
12->34->26->67->98
What would be the state of the linked list when the following Python function is invoked by
passing the head node of the above linked list and 3?
Assumption: All the references to the necessary files are available
 
def fun(head,n):
	temp=head
	if(head==None):
		return
	else:
		i=1
		while(i != n):
			temp = temp.next
			i += 1
		temp1=head.data
		head.data=temp.data
		temp.data=temp1

A. 12->34->26->67->98
B. 26->34->12->67->98
C. 67->34->26->12->98
D. 98->34->26->67->12
Ans. B


5. Given the following Linked List: 12->121->112->111->222
What would be the state of the linked list when the following Python function is invoked by passing
the head node of the above linked list?
Assumption: All the references to the necessary files are available

def fun(head):
	temp=head
	if(head==None):
		return
	else:
		while(temp.next != None);
			temp.data += temp.next.data
			temp=temp.next 
A. 133->233->223->111->222
B. 133->233->112->333->222
C. 133->233->223->333->222
D. 133->233->223->333->355
Ans. C


6. Peter has come up with 4 different algorithms with different step-counts as shown below to solve a
problem.
Step count for Algorithm1 : logn + 2^n + n!
Step count for Algorithm2 : n^2 + 2*n
Step count for Algorithm3 : n + logn
Step count for Algorithm4 : logn + n^n
Which is the best algorithm among these based on its Big O notation?
A. Algorithm3
B. Algorithm2
C. Algorithm4
D. Algorithm1
Ans. A


7. Consider the list of numbers given below:
45 56 79 81 82 94 108
Identify the search algorithm which will be able to find the element 79 in 4 iterations from the
below given options.
1. Linear Search
2. Binary Search
A. Only 1
B. Only 2
C. Both 1 and 2
D. Neither 1 or 2
Ans. D
