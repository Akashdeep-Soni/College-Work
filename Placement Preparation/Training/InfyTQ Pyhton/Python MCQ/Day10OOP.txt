1.What is the output of the following code?

class Fruits:
    def __init__(self):
        self.price = 100
        self.__bags = 5
    def display(self):
        print(self.__bags)
obj=Fruits()
obj.display()

a)The program has an error because display() is trying to print a private class member
b)The program runs fine but nothing is printed
c)The program runs fine and 5 is printed
d)The program has an error because display() can’t be accessed
Ans c
2.What is the output of the following code?

class Student:
    def __init__(self):
        self.marks = 97
        self.__cgpa = 8.7

    def display(self):
        print(self.marks)

obj=Student()
print (obj._student__cgpa)

a)The program runs fine and 8.7 is printed
b)Error because private class members can’t be accessed
c)Error because the proper syntax for name mangling hasn’t been implemented
d)The program runs fine but nothing is printed
Ans c

3.What type of inheritance is illustrated in the following piece of code?

class A():
    pass
class B():
    pass
class C(A,B):
    pass

a)Multi-level inheritance
b)Multiple inheritance
c)Hierarchical inheritance
d)Single-level inheritance
Ans b

4.What is the output of the following piece of code?
class A:
     def __init__(self):
         self.__i = 1
         self.j = 5
 
     def display(self):
         print(self.__i, self.j)

class B(A):
     def __init__(self):
         super().__init__()
         self.__i = 2
         self.j = 7  

c = B()
c.display()

a)2 7
b)1 5
c)1 7
d)2 5
Ans c

5.What is the output of the following code?

class A:
    def print_hello(self):
        print ("In class A")

class B(A):
    pass

class C(A, B):
    pass

c = C()

c.print_hello()

a)Prints “In class A”
b)Does not print anything
c)Shows error
d)None of the above
Ans c

6.What is the output of the following code?

class A:
    def print_hello(self):
        print ("In class A")

class B(A):
    pass

class C(B, A):
    def print_hello(self):
        super(C, self).print_hello()
        print ("In class C")

c = C()
a = A()

a.print_hello()
c.print_hello()

a)In class A
In class A
In class C
b)In class C
In class A
c)In class C
d)None of the above
Ans a

7.What is the output of the following code?
class A:
    def __init__(self,x):
        self.x = x
    def count(self,x):
        self.x = self.x+1
class B(A):
    def __init__(self, y=0):
        A.__init__(self, 3)
        self.y = y
    def count(self):
        self.y += 1     
def main():
    obj = B()
    obj.count()
    print(obj.x, obj.y)
main()
a)3 0
b)0 1
c)3 1
d)None of the above
Ans c
8.What is the output of the following piece of code when executed in the Python shell?
>>> class A:
	pass
>>> class B(A):
	pass
>>> obj=B()
>>> isinstance(obj,A)

a) True
b) False
c) Wrong syntax for isinstance() method
d) Invalid method for classes
Ans a
9.Method issubclass() checks if a class is a subclass of another class. True or False?
a) True
b) False
Ans a
10.What is the output of the following piece of code?

class A:
    def one(self):
        return self.two()    	
    def two(self):
        return 'A'   
class B(A):
    def two(self):
        return 'B'
obj2=B()
print(obj2.two())
a)A
b)Exception is thrown
c)A B
d)B
Ans d
11.Which of the following statements are true for the given code snppet?
class A:
    def __init__(self, i = 0):
        self.i = i

class B(A):
    def __init__(self, j = 0):
        self.j = j
def main():
    b = B()
    print(b.i)
    print(b.j)

main()
a)Class B inherits A, but the data field “i” in A is not inherited.
b)Class B inherits A, thus automatically inherits all data fields in A.
c)When you create an object of B, you have to pass an argument such as B(5)
d)The data field “j” cannot be accessed by object b
Ans a
12.What will be the output of the following code?

class A:
    def __init__(self):
        self.calcI(30)
        print("i from A is", self.i)

    def calcI(self, i):
        self.i = 2 * i;

class B(A):
    def __init__(self):
        super().__init__()
        
    def calcI(self, i):
        self.i = 3 * i;

b = B()

a)The __init__ method of only class B gets invoked
b)The __init__ method of class A gets invoked and it displays “i from A is 0”
c)The __init__ method of class A gets invoked and it displays “i from A is 60”
d)The __init__ method of class A gets invoked and it displays “i from A is 90”
Ans d

13.What is the output of the following piece of code?

class Demo:
    count = 0

    def __init__(self):
        self.count += 1

    def get_count(self):
        return self.count

demo = Demo()
demo1 = Demo()

print (demo.get_count())

a)1
b)2
c)0
d)None of the above
Ans a
14.What is the output of the following code?

class Demo:
    count = 0

    def __init__(self):
        Demo.count += 1

    def get_count(self):
        return Demo.count

demo1 = Demo()
demo2 = Demo()
demo3 = Demo()
print (demo1.get_count())
a)1
b)2
c)3
d)None of the above
Ans c

15.What is the output of the following code?
class P: 
   def __init__(self): 
      self.__x=100 
      self.y=200 
   def print(self): 
      print (self.__x, self.y)  
class C(P): 
   def __init__(self): 
      super().__init__() 
      self.__x=300 
      self.y=400  
d = C() 
d.print()

a)300 400
b)100 400
c)100 200
d)300 200
Ans b
16.What is the output of the following code?

class Demo:
    def __init__(self):
        self.a = 1
        self.__b = 1
 
    def display(self):
        return self.__b
obj = Demo()
print(obj.a)

a)The program has an error because there isn’t any function to return self.a
b)The program has an error because b is private and display(self) is returning a private member
c)The program runs fine and 1 is printed
d)The program has an error as you can’t name a class member using __b
Ans c
17.What is the output of the following code?
class Demo:
    def __init__(self):
        self.a = 1
        self.__b = 1
 
    def display(self):
        return self.__b
 
obj = Demo()
print(obj.__b)

a)The program has an error because there isn’t any function to return self.a
b)The program has an error because b is private and display(self) is returning a private member
c)The program has an error because b is private and hence can’t be printed
d)The program runs fine and 1 is printed
Ans c
18.Which of these is a private data field?
class Demo:
    def __init__(self):
        __a = 1
        self.__b = 1
        self.__c__ = 1
        __d__= 1
a)__a
b)_b
c)__c__
d)__d__
Ans a
19.	What is the output of the following code?
class Demo:
     def __init__(self):
         self.a = 1
         self.__b = 1
 
     def get(self):
         return self.__b
 
obj = Demo()
print(obj.get())

a)The program has an error because there isn’t any function to return self.a
b)The program has an error because b is private and display(self) is returning a private member
c)The program has an error because b is private and hence can’t be printed
d)The program runs fine and 1 is printed
Ans d

20.	What is the output for the following piece of code?

class Demo:
     def __init__(self):
         self.a = 1
         self.__b = 1
     def get(self):
         return self.__b
obj = Demo()
obj.a=45
print(obj.a)
a)The program runs properly and prints 45
b)The program has an error because the value of members of a class can’t be changed from outside the class
c)The program runs properly and prints 1
d)The program has an error because the value of members outside a class can only be changed as self.a=45
Ans a